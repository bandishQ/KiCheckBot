import telebot
from flask import Flask, request

API_TOKEN = '8036017301:AAGuK4bnXaY3zosVs8FDFnJFVZU0kp47qXQ'
bot = telebot.TeleBot(API_TOKEN)
app = Flask(__name__)

offers = [
    "üî• <a href='https://lnk.do/x8H2aVwb'>–£–∑–Ω–∞—Ç—å —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –ø–æ–ª—É—á–∏—Ç—å –∑–∞–π–º</a>",
    "üí∞ <a href='https://lnk.do/FeVFAh5'>–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞–π–º–∞</a>"
]

user_data = {}

@bot.message_handler(commands=['start'])
def start_message(message):
    user_id = message.chat.id
    user_data[user_id] = {'step': 1}
    bot.send_message(user_id, "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>KiCheckBot</b>!\n\n"
                              "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ—é –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –∏ –ø–æ–ª—É—á–∏—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –Ω–∞ –∑–∞–π–º.", parse_mode='HTML')
    bot.send_message(user_id, "üìû –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.")

@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    user_id = message.chat.id
    user_data[user_id]['phone'] = message.contact.phone_number
    bot.send_message(user_id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.")
    send_offer(user_id)

@bot.message_handler(func=lambda message: True)
def handle_text(message):
    user_id = message.chat.id
    if user_id in user_data and user_data[user_id]['step'] == 1:
        bot.send_message(user_id, "üìû –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–∞–∫ –∫–æ–Ω—Ç–∞–∫—Ç.")
    else:
        send_offer(user_id)

def send_offer(user_id):
    import random
    offer = random.choice(offers)
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton("üîÅ –ü–æ–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", callback_data='next_offer'))
    bot.send_message(user_id, offer, parse_mode='HTML', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == 'next_offer')
def callback_next_offer(call):
    send_offer(call.message.chat.id)

# Flask webhook
@app.route(f'/{API_TOKEN}', methods=['POST'])
def webhook():
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return '!', 200

@app.route('/')
def index():
    return "KiCheckBot is alive!", 200
